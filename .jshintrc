{
    "bitwise"       : true,     // Prohibit bitwise operators (&, |, ^, etc.).
    "camelcase"     : true,     // use camelCase for all variable names.
    "curly"         : false,     // Require {} for every new block or scope.
    "eqeqeq"        : true,     // Require triple equals i.e. `===`.
    "es3"           : false,    // Adhere to old EcmaScript 3 conventions / syntaxes.
    "forin"         : true,     // Require `for in` loops to iterate over `hasOwnPrototype`.
    "freeze"        : true,     // Prohibit money patching native types.
    "immed"         : false,    // Require immediate invocations to be wrapped in parens e.g. `( function(){}() );`
    "latedef"       : "nofunc", // Prohibit variable use before definition (functions are fine).
    "newcap"        : true,     // Require capitalization of all constructor functions e.g. `new F()`.
    "noarg"         : true,     // Prohibit use of `arguments.caller` and `arguments.callee`.
    "noempty"       : true,     // Prohibit use of empty blocks.
    "nonew"         : true,     // Prohibit use of constructors for side-effects.
    "plusplus"      : false,    // Prohibit use of `++` & `--`.
    "quotmark"      : "single", // Quotation mark style: 'single', "double" or true = consistent.
    "regexp"        : false,    // Prohibit `.` and `[^...]` in regular expressions.
    "undef"         : true,     // Require all non-global variables be declared before they are used.
    "unused"        : "vars",   // Require declared variables to be used.
    "strict"        : true,     // Require `use strict` pragma in every file.
    "trailing"      : true,     // Prohibit trailing whitespaces.

    "asi"           : false,    // Tolerate Automatic Semicolon Insertion (no semicolons).
    "boss"          : false,    // Tolerate assignments inside if, for & while. Usually conditions & loops are for comparison, not assignments.
    "debug"         : false,    // Allow debugger statements e.g. browser breakpoints.
    "eqnull"        : false,    // Tolerate use of `== null`.
    "esnext"        : true,    // Allow ES.next specific features such as `const` and `let`.
    "evil"          : false,    // Tolerate use of `eval`.
    "expr"          : false,    // Tolerate `ExpressionStatement` as Programs.
    "funcscope"     : false,    // Tolerate declarations of variables inside of control structures while accessing them later from the outside.
    "gcl"           : false,    // Enable compatibility with Google Closure Compiler.
    "globalstrict"  : false,    // Allow global "use strict" (also enables 'strict').
    "iterator"      : false,    // Allow usage of __iterator__ property.
    "lastsemic"     : false,    // Tolerate missing semicolons when the it is omitted for the last statement in a one-line block.
    "laxbreak"      : false,    // Tolerate unsafe line breaks e.g. `return [\n] x` without semicolons.
    "laxcomma"      : false,    // Suppress warnings about comma-first coding style.
    "loopfunc"      : false,    // Allow functions to be defined within loops.
    "moz"           : false,    // Enable compatibility with Firefox specific JS.
    "multistr"      : false,    // Tolerate multi-line strings.
    "onecase"       : false,    // Tolerate switches with just one case.
    "proto"         : false,    // Tolerate __proto__ property. This property is deprecated.
    "regexdash"     : false,    // Tolerate unescaped last dash i.e. `[-...]`.
    "scripturl"     : false,    // Tolerate script-targeted URLs.
    "smarttabs"     : false,    // Tolerate mixed tabs and spaces when the latter are used for alignmnent only.
    "shadow"        : false,    // Allows re-define variables later in code e.g. `var x=1; x=2;`.
    "sub"           : true,     // Tolerate all forms of subscript notation besides dot notation e.g. `dict['key']` instead of `dict.key`.
    "supernew"      : false,    // Tolerate `new function () { ... };` and `new Object;`.
    "validthis"     : false,    // Tolerate strict violations when the code is running in strict mode and you use this in a non-constructor function.
    "noyield"       : false,    // Tolerate generator functions without yield statements.

    "browser"       : true,     // Standard browser globals e.g. `window`, `document`.
    "couch"         : false,    // Enable globals exposed by CouchDB.
    "devel"         : true,     // Allow development statements e.g. `console.log();`.
    "dojo"          : false,    // Enable globals exposed by Dojo Toolkit.
    "jquery"        : false,    // Enable globals exposed by jQuery JavaScript library.
    "mootools"      : false,    // Enable globals exposed by MooTools JavaScript framework.
    "node"          : false,    // Enable globals available when code is running inside of the NodeJS runtime environment.
    "nonstandard"   : false,    // Define non-standard but widely adopted globals such as escape and unescape.
    "prototypejs"   : false,    // Enable globals exposed by Prototype JavaScript framework.
    "rhino"         : false,    // Enable globals available when your code is running inside of the Rhino runtime environment.
    "wsh"           : false,    // Enable globals available when your code is running as a script for the Windows Script Host.

    "maxdepth"      : 5,        // Maximum depth of nexting within functions.
    "maxparams"     : 50,       // Maximum parameters for a function.
    "maxstatements" : 0,        // Maximum statements allowed per function.
    "maxcomplexity" : 0,        // Maximum cyclomatic complexity per function.
    "maxlen"        : 180,      // Maximum line length.
    "maxerr"        : 0,        // Maximum errors before stopping.
    "indent"        : 2,        // Specify indentation spacing
    "globals"       : {         // Extra globals.
        "module" : false,
        "require": false,
        "angular": false,
        "deferredBootstrapper": false,
        "controllers": false,
        "directives": false,
        "services": false,
        "filters": false,
        "describe": false,
        "xdescribe": false,
        "getJSONFixture": false,
        "beforeEach": false,
        "afterEach": false,
        "establish": false,
        "because": false,
        "resolve": false,
        "resolveController": false,
        "resolveDirective": false,
        "it": false,
        "expecting": false,
        "inject": false,
        "jasmine": false,
        "spyOn": false,
        "expect": false,
        "pending": false,
        "validation": false,
        "FastClick": false,
        "Raygun": false,
        "React": false,
        "ReactDOM": false
    }
}
